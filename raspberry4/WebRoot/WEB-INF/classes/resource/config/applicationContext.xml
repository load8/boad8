<?xml version="1.0" encoding="UTF-8"?>
<!-- 注意下面配置中的spring-*.xsd的版本号要与使用的jar包匹配 -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
        
    <!-- 只解析除controller之外的注解(即解析service、dao), 避免重复加载导致事务失效  -->
    <context:component-scan base-package="com.org.rasp">
         <!-- annotation为spting-mvc中解析的内容 -->
         <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <!-- 加载properties文件 -->
    <context:property-placeholder location="classpath:resource/config/db.properties"/>  
       
         <!-- <bean class="org.apache.commons.dbcp2.BasicDataSource" id="dataSource" destroy-method="close"> -->
        <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource" ><!--  destroy-method="close" -->
	        <property name="driverClassName" value="${db.driverClass}"></property>
	        <property name="url" value="${db.jdbcUrl}"></property>
	        <property name="username" value="${db.user}"></property>
	        <property name="password" value="${db.password}"></property>
	        <!-- <property name="defaultAutoCommit" value="true"></property>  -->       
	  <!-- 初始化连接大小 <property name="initialSize" value="${initialSize}"></property>   
                                 连接池最大数量 <property name="maxActive" value="${maxActive}"></property> 
                                 连接池最大空闲 <property name="maxIdle" value="${maxIdle}"></property> 
                                 连接池最小空闲 <property name="minIdle" value="${minIdle}"></property> 
                                 获取连接最大等待时间 <property name="maxWait" value="${maxWait}"></property> -->  
        </bean>

 		<!-- 事务配置 -->
    	<bean id="transactionManager"
       	 	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        	<property name="dataSource" ref="dataSource" />
    	</bean>

        <!-- 以下两个是Mybatis配置文件 -->

        <!-- 配置SqlSession工厂 -->
        <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactoryBean">
            <!-- 配置datasource -->
            <property name="dataSource" ref="dataSource"></property>
            <!--  configLocation属性指定mybatis的核心配置文件（可以配置别名）  -->
            <property name="configLocation" value="classpath:resource/config/SqlMapConfig.xml"></property>
             <!--  自动扫描mapping.xml文件， -->
            <property name="mapperLocations" value="classpath:resource/config/sqlMap/*.xml"></property>
       </bean>
        
        <!-- 配置映射接口  -->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" id="mapperScannerConfigurer">
            <!-- 配置映射文件对应的接口目录 -->
            <property name="basePackage" value="com.org.rasp.dao"></property>
            <!-- 指定这个scanner所使用的sqlSessionFactory -->
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean" /> 
			<!-- 自定义注解 -->
            <!-- <property name="annotationClass" value="com.org.rasp.annotation.MybatisAnotation"></property> -->
        </bean>
        
	    <!-- 配置事务的传播特性 -->  
	    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
	        <tx:attributes>  
	            <tx:method name="add*" propagation="REQUIRED" />  
	            <tx:method name="del*" propagation="REQUIRED" />  
	            <tx:method name="modify*" propagation="REQUIRED" /> 
	            <tx:method name="insert*" propagation="REQUIRED" />  
	            <tx:method name="update*" propagation="REQUIRED" />
	            <tx:method name="*" read-only="true" />  
	        </tx:attributes>  
	    </tx:advice> 
	    <!-- 那些类的哪些方法参与事务   
   		 我解释一下(* com.z2sci.soa.manager.*.*(..))中几个通配符的含义：   
    	|第一个 * —— 通配 任意返回值类型| |第二个 * —— 通配 包com.z2sci.soa.manager下的任意class| |第三个 * ——   
     	   通配 包com.z2sci.soa.manager下的任意class的任意方法| |第四个 .. —— 通配 方法可以有0个或多个参数| -->    
    	<aop:config>  
	        <aop:pointcut id="allManagerMethod"  
	            expression="execution(* com.org.rasp.service.impl.*.*(..))" />  
	        <aop:advisor pointcut-ref="allManagerMethod" advice-ref="txAdvice" />  
    	</aop:config>
</beans>