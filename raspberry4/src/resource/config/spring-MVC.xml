<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-4.1.xsd  
    http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd"
    default-autowire="byName">
    
    <!-- 开启注解 -->
    <mvc:annotation-driven></mvc:annotation-driven>
    
    <!-- 注解扫描包 -->
    <context:component-scan base-package="com.org.rasp"> <!--  "com.lq.controller" -->
               <!-- 只扫描@Controller的部分 -->
             <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
<!--         <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/> -->  
    </context:component-scan>  
    

     
    <!-- 定义视图解析器 -->
    <bean id="viewResolver"
    class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<property name="prefix" value="/jsp"></property>
    	<property name="suffix" value=".jsp"></property>
    </bean>
    
    <!-- 静态资源(js/image)的访问 ，可添加多个-->
    <mvc:resources location="/js/" mapping="/js/**" />
    
    
    <mvc:default-servlet-handler/>
 
     <!-- 完成请求和注解POJO的映射 -->
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" /> 
 <!--  
    支持返回json(启动SpringMVC的注解功能，完成请求和注解POJO的映射 )  -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
<!--         <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter"/>  JSON转换器  
            </list>  
        </property>   -->
    </bean> 
     <!--(避免IE在ajax请求时，返回json出现下载 ) --> 
<!--     <bean id="mappingJacksonHttpMessageConverter"  
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/plain;charset=UTF-8</value>  
                <value>application/json;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>   -->
    <!--支持返回json -->  
  
    <!--内容协商管理器 -->
    <!--1、首先检查路径扩展名（如my.pdf）；2、其次检查Parameter（如my?format=pdf）；3、检查Accept Header-->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <!--扩展名至mimeType的映射,即 /user.json => application/json-->
        <property name="favorPathExtension" value="true"/>
       <!-- 用于开启 /userinfo/123?format=json 的支持-->
        <property name="favorParameter" value="true"/>
        <property name="parameterName" value="format"/>
     	<!--   是否忽略Accept Header-->
        <property name="ignoreAcceptHeader" value="false"/>

        <property name="mediaTypes"> <!--扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用 -->
            <value>
                json=application/json
                xml=application/xml
                html=text/html
            </value>
        </property>
        <!--默认的content type-->
        <property name="defaultContentType" value="text/html"/>
    </bean>
    
       
    <!--配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包  -->
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!--默认编码-->  
        <property name="defaultEncoding" value="utf-8" />    
      <!--  文件大小最大值-->  
        <property name="maxUploadSize" value="10485760000" />    
       <!--  内存中的最大值 --> 
        <property name="maxInMemorySize" value="40960" />    
    </bean>      
</beans>